---
##############################
# This playbook deploys Gluster

# Configuration to allow hosts to be gluster clients
- hosts: all
  become: true
  tasks:
    - name: Install gluster fuse client
      yum:
        name: glusterfs-fuse
        state: present

    - name: Make SELinux allow writing to gluster volumes
      seboolean:
        name: virt_sandbox_use_fusefs
        state: on
        persistent: yes

# Configuration of the gluster server nodes
- hosts: worker0, worker1, worker2
  become: true
  roles:
    - { role: gluster-server, gluster_disks: [vdb] }

# Deploy in kubernetes
- hosts: master
  vars:
    gluster_nodes: [worker0, worker1, worker2]
    ns: glusterfs
  tasks:
    # Namespace for gluster stuff
    - name: Check for namespace
      command: kubectl get namespace {{ ns }}
      ignore_errors: true
      register: ns_check

    - name: Create namespace
      command: kubectl create namespace {{ ns }}
      when: ns_check.rc != 0

    # Deploy gluster servers
    - name: Label nodes to receive Gluster servers
      command: kubectl label nodes {{ item }} --overwrite storagenode=glusterfs
      with_items: "{{ gluster_nodes }}"

    - name: Copy Gluster daemonset template
      template:
        src: templates/glusterfs-daemonset.yaml.j2
        dest: /tmp/glusterfs-daemonset.yaml

    - name: Deploy Gluster daemonset
      command: kubectl create -f /tmp/glusterfs-daemonset.yaml

    - name: Wait for gluster pods to be ready
      shell: test "$(kubectl -n {{ ns }} get ds/glusterfs -o jsonpath='{.status.numberReady}')" = "$(kubectl -n {{ ns }} get ds/glusterfs -o jsonpath='{.status.desiredNumberScheduled}')"
      register: task_result
      until: task_result.rc == 0
      delay: 10
      retries: 60
      changed_when: false

    # Create endpoints and service
    - name: Copy endpoint script
      template:
        src: templates/glusterfs-svc.sh.j2
        dest: /tmp/glusterfs-svc.sh
        mode: 0755

    - name: Create endpoint and service
      command: /tmp/glusterfs-svc.sh

